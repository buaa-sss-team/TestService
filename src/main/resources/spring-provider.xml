<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
    <dubbo:application name="sss-testservice-provider"/>
    <!-- 连接到哪个本地注册中心 -->
    <dubbo:registry id="sss" address="zookeeper://localhost:2181"/>
    <!-- 用dubbo协议在20880端口暴露服务 -->
    <!-- TODO 修改一下这里的端口，此为提供服务的进程占用的本地端口号，本地多开时不能重复 -->
    <dubbo:protocol name="dubbo" port="28080"/>
    <!-- 声明需要暴露的服务接口 -->
    <!-- TODO 修改这里的interface和ref属性为你的服务暴露的接口的类名和引用名称 -->
    <!--Provider	配置可 以作为	Consumer 的缺省值	。否则，Consumer 会使用 Consumer 端的全局设置-->
    <!--因此建议在provider端配置consumer端的配置：-->
    <!--timeout 方法调用超时-->
    <!--retries 失败重试次数，默认是2-->
    <!--loadbalance 负载均衡算法，缺省是随机 random，可以使轮询 roundrobin-->
    <!--在provider端配置provider的属性：-->
    <!--dubbo:protocol threads 服务线程池大小-->
    <!--executes 一个服务提供者并行执行请求上限-->
    <dubbo:service registry="sss"
                   timeout="3000"
                   interface="com.sss.interfaces.ITestService"
                   ref="TestService"/>

    <dubbo:service registry="sss"
                   timeout="3000"
                   interface="com.sss.interfaces.IDBService"
                   ref="DBService"/>

    <dubbo:service interface="com.sss.interfaces.ITestUserService"
                   registry="sss"
                   timeout="3000"
                   ref="TestUserService"/>

    <dubbo:service interface="com.sss.interfaces.dao.IHDBdao"
                   registry="sss"
                   timeout="3000"
                   ref="HDBdao"/>

    <dubbo:service interface="com.sss.interfaces.service.FileService"
                   ref="FileService"/>

    <dubbo:service interface="com.sss.interfaces.service.RequestService"
                   ref="RequestService"/>

    <dubbo:service interface="com.sss.interfaces.service.IAuthorization"
                   ref="IAuthorization"/>

    <dubbo:annotation package="com.sss.provider"/>
</beans>